{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/atoms/checkbox/checkbox.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function Checkbox({\n  onChangecheck,\n  id,\n}: {\n  onChangecheck: (checked: boolean) => void;\n  id: string;\n}) {\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(e.target.checked);\n    onChangecheck(e.target.checked);\n  };\n\n  return (\n    <input\n      id={`checkbox-${id}`}\n      data-testid={`checkbox-${id}`}\n      type=\"checkbox\"\n      checked={isChecked}\n      onChange={handleCheckboxChange}\n      className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded-sm focus:ring-0\"\n    />\n  );\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,SAAS,EAC/B,aAAa,EACb,EAAE,EAIH;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,uBAAuB,CAAC;QAC5B,aAAa,EAAE,MAAM,CAAC,OAAO;QAC7B,cAAc,EAAE,MAAM,CAAC,OAAO;IAChC;IAEA,qBACE,8OAAC;QACC,IAAI,CAAC,SAAS,EAAE,IAAI;QACpB,eAAa,CAAC,SAAS,EAAE,IAAI;QAC7B,MAAK;QACL,SAAS;QACT,UAAU;QACV,WAAU;;;;;;AAGhB","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/atoms/label/label.tsx"],"sourcesContent":["export default function Label({ text, id }: { text: string; id: string; }) {\n    return (\n        <label htmlFor={`checkbox-${id}`} data-testid={`checkbox-${id}`} className=\"w-full py-3 ms-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n            {text}\n        </label>\n    );\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,MAAM,EAAE,IAAI,EAAE,EAAE,EAAiC;IACrE,qBACI,8OAAC;QAAM,SAAS,CAAC,SAAS,EAAE,IAAI;QAAE,eAAa,CAAC,SAAS,EAAE,IAAI;QAAE,WAAU;kBACtE;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/molecules/check-label/check-label.tsx"],"sourcesContent":["import Checkbox from \"@/app/atoms/checkbox/checkbox\";\nimport Label from \"@/app/atoms/label/label\";\n\nexport default function CheckLabel({ text, id, onChangecheck }: { text: string; id: string; onChangecheck: (checked: boolean, text: string) => void; }) {\n    const handelChange = (checked: boolean) => {\n        onChangecheck(checked, text);\n    }\n    return (\n        <ul className=\"w-48 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg dark:bg-gray-700 dark:border-gray-600 dark:text-white\">\n            <li className=\"</ul>w-full border-b border-gray-200 rounded-t-lg dark:border-gray-600\">\n                <div className=\"flex items-center ps-3\">\n                    <Checkbox onChangecheck={(check) => handelChange(check)} id={id} />\n                    <Label text={text} id={id} />\n                </div>\n            </li>\n        </ul>\n    );\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS,WAAW,EAAE,IAAI,EAAE,EAAE,EAAE,aAAa,EAA0F;IAClJ,MAAM,eAAe,CAAC;QAClB,cAAc,SAAS;IAC3B;IACA,qBACI,8OAAC;QAAG,WAAU;kBACV,cAAA,8OAAC;YAAG,WAAU;sBACV,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,4IAAA,CAAA,UAAQ;wBAAC,eAAe,CAAC,QAAU,aAAa;wBAAQ,IAAI;;;;;;kCAC7D,8OAAC,sIAAA,CAAA,UAAK;wBAAC,MAAM;wBAAM,IAAI;;;;;;;;;;;;;;;;;;;;;;AAK3C","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/core/apis/products/useProductsApi.ts"],"sourcesContent":["import axios from \"axios\"; // Importa desde el mismo mÃ³dulo\n\nimport { ApiResponse } from \"@/shared/client-http/client-http-config\";\nimport { Product } from \"@/shared/models/products/products\";\n\nconst baseApi = process.env.NEXT_PUBLIC_API_URL || \"https://fakestoreapi.com\";\n\nexport const useProductsApi = () => {\n\n  /**\n   * Fetches a list of products from the API.\n   * \n   * @returns {Promise<ApiResponse<Product[]>>} A promise that resolves to the API response containing an array of products.\n   */\n  const listProduct = (): Promise<ApiResponse<Product[]>> => {\n    \n    return axios.get(`${baseApi}/products`) as Promise<ApiResponse<Product[]>>;\n  }\n\n  /**\n   * Fetches a single product by its ID from the API.\n   * \n   * @param {number} id - The ID of the product to fetch.\n   * @returns {Promise<ApiResponse<Product>>} A promise that resolves to the API response containing the product.\n   */\n  const getProductById = (id:number): Promise<ApiResponse<Product>> => {\n    \n    return axios.get(`${baseApi}/products/${id}`) as Promise<ApiResponse<Product>>;\n  }\n  /**\n   * Creates a new product in the API.\n   * \n   * @param {Product} product - The product data to create.\n   * @returns {Promise<ApiResponse<Product>>} A promise that resolves to the API response containing the created product.\n   */\n  const create = (product: Product): Promise<ApiResponse<Product>> => {\n    return axios.post(`${baseApi}/products`, product) as Promise<ApiResponse<Product>>;\n  }\n  /**\n   * Updates an existing product in the API.\n   * \n   * @param {number} id - The ID of the product to update.\n   * @param {Product} product - The updated product data.\n   * @returns {Promise<ApiResponse<Product>>} A promise that resolves to the API response containing the updated product.\n   */\n  const update = (id: number, product: Product): Promise<ApiResponse<Product>> => {\n    return axios.put(`${baseApi}/products/${id}`, product) as Promise<ApiResponse<Product>>;\n  }\n  \n\n  return { listProduct,getProductById, create, update }\n}"],"names":[],"mappings":";;;AAAA,yOAA2B,gCAAgC;;AAK3D,MAAM,UAAU,gEAAmC;AAE5C,MAAM,iBAAiB;IAE5B;;;;GAIC,GACD,MAAM,cAAc;QAElB,OAAO,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,SAAS,CAAC;IACxC;IAEA;;;;;GAKC,GACD,MAAM,iBAAiB,CAAC;QAEtB,OAAO,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,UAAU,EAAE,IAAI;IAC9C;IACA;;;;;GAKC,GACD,MAAM,SAAS,CAAC;QACd,OAAO,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,SAAS,CAAC,EAAE;IAC3C;IACA;;;;;;GAMC,GACD,MAAM,SAAS,CAAC,IAAY;QAC1B,OAAO,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,UAAU,EAAE,IAAI,EAAE;IAChD;IAGA,OAAO;QAAE;QAAY;QAAgB;QAAQ;IAAO;AACtD","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/core/state/products/useProductsState.ts"],"sourcesContent":["import { BehaviorSubject } from \"rxjs\"\n\nimport { Categories, Product, ProductPayload, ProductState} from \"@/shared/models/products/products\";\n\n\nexport const initialState = {\n  product: [],\n  productById:{} as Product,\n  category:[],\n  filterCategories: [],\n  listing: false,\n  load: false,\n  creating: false,\n  updating: false,\n  removing: false,\n  error: \"\"\n}\n\nconst todoSubject = new BehaviorSubject<ProductState>(initialState);\n\n/**\n * Hook to manage the state of products using an observable pattern.\n * Provides methods to manipulate and retrieve product-related state.\n */\nexport const useProductsObservable = () => {\n  /**\n   * Updates the state with a list of products.\n   * @param product - Array of products to set in the state.\n   */\n  const listProduct = (product: Product[]) => {\n    setNextState({ product, error: \"\" });\n  }\n  /**\n   * Updates the state with a single product by its ID.\n   * @param product - The product to set in the state.\n   */\n  const productById = (product: Product) => {\n    setNextState({productById:product, error: \"\" });\n  }\n  /**\n   * Updates the state with a list of categories.\n   * @param category - Array of categories to set in the state.\n   */\n  const categories = (category: Categories[]) => {\n    \n    setNextState({ category, error: \"\" });\n  }\n  /**\n   * Removes a category from the filter categories in the state.\n   * @param name - The name of the category to remove.\n   */\n  const deleteFilterCategories = (name:string) => {\n    const filterCategories = [...todoSubject.getValue().filterCategories].filter(category => category.category !== name);\n    setNextState({ filterCategories, error: \"\" });\n  }\n  /**\n   * Adds a category to the filter categories in the state.\n   * @param name - The name of the category to add.\n   */\n  const addFilterCategories = (name:string) => {\n    const filterCategories = [...todoSubject.getValue().filterCategories, { category: name }];\n    setNextState({ filterCategories, error: \"\" });\n  }\n  /**\n   * Updates the state to indicate whether products are being listed.\n   * @param flag - Boolean flag indicating the listing state.\n   */\n  const listing = (flag: boolean) => {\n    setNextState({ listing: flag });\n  }\n  /**\n   * Updates the state to indicate whether the application is loading.\n   * @param flag - Boolean flag indicating the loading state.\n   */\n  const load = (flag: boolean) => {\n    setNextState({ load: flag });\n  }\n\n  /**\n   * Adds a new product to the state.\n   * @param newProduct - The new product to add.\n   */\n  const create = (newProduct: Product) => {\n    const product = [...todoSubject.getValue().product, newProduct];\n    setNextState({ product, error: \"\" });\n  }\n  /**\n   * Updates the state to indicate whether a product is being created.\n   * @param flag - Boolean flag indicating the creating state.\n   */\n  const creating = (flag: boolean) => {\n    setNextState({ creating: flag });\n  }\n  /**\n   * Updates a product in the state by its ID.\n   * @param id - The ID of the product to update.\n   * @param productUpdate - The updated product data.\n   */\n  const update = (id: number, productUpdate: Product) => {\n    let product = [...todoSubject.getValue().product];\n    const updateListProduct = product.map((item) => {\n      if (item.id === id) {\n        return {...productUpdate };\n      }\n      return item;\n    });\n\n    console.log(\"updateListProduct\", updateListProduct);\n    \n\n    setNextState({ productById: productUpdate, product:updateListProduct, error: \"\" })\n\n  }\n  /**\n   * Updates the state to indicate whether a product is being updated.\n   * @param flag - Boolean flag indicating the updating state.\n   */\n  const updating = (flag: boolean) => {\n    setNextState({ updating: flag });\n  }\n\n  /**\n   * Updates the state with an error message.\n   * @param message - The error message to set.\n   */\n  const error = (message: string) => {\n    setNextState({ error: message });\n  }\n  /**\n   * Updates the state with the provided payload.\n   * @param payload - The payload to merge into the current state.\n   */\n  const setNextState = (payload: ProductPayload) => {\n    const state = todoSubject.getValue();\n    todoSubject.next({ ...state, ...payload } as ProductState);\n  }\n  const getObservable = () => {\n    return todoSubject;\n  }\n  return {\n    listProduct,\n    load,\n    productById,\n    categories,\n    deleteFilterCategories,\n    addFilterCategories,\n    listing,\n    create,\n    creating,\n    update,\n    updating,\n    error,\n    getObservable\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAKO,MAAM,eAAe;IAC1B,SAAS,EAAE;IACX,aAAY,CAAC;IACb,UAAS,EAAE;IACX,kBAAkB,EAAE;IACpB,SAAS;IACT,MAAM;IACN,UAAU;IACV,UAAU;IACV,UAAU;IACV,OAAO;AACT;AAEA,MAAM,cAAc,IAAI,4IAAA,CAAA,kBAAe,CAAe;AAM/C,MAAM,wBAAwB;IACnC;;;GAGC,GACD,MAAM,cAAc,CAAC;QACnB,aAAa;YAAE;YAAS,OAAO;QAAG;IACpC;IACA;;;GAGC,GACD,MAAM,cAAc,CAAC;QACnB,aAAa;YAAC,aAAY;YAAS,OAAO;QAAG;IAC/C;IACA;;;GAGC,GACD,MAAM,aAAa,CAAC;QAElB,aAAa;YAAE;YAAU,OAAO;QAAG;IACrC;IACA;;;GAGC,GACD,MAAM,yBAAyB,CAAC;QAC9B,MAAM,mBAAmB;eAAI,YAAY,QAAQ,GAAG,gBAAgB;SAAC,CAAC,MAAM,CAAC,CAAA,WAAY,SAAS,QAAQ,KAAK;QAC/G,aAAa;YAAE;YAAkB,OAAO;QAAG;IAC7C;IACA;;;GAGC,GACD,MAAM,sBAAsB,CAAC;QAC3B,MAAM,mBAAmB;eAAI,YAAY,QAAQ,GAAG,gBAAgB;YAAE;gBAAE,UAAU;YAAK;SAAE;QACzF,aAAa;YAAE;YAAkB,OAAO;QAAG;IAC7C;IACA;;;GAGC,GACD,MAAM,UAAU,CAAC;QACf,aAAa;YAAE,SAAS;QAAK;IAC/B;IACA;;;GAGC,GACD,MAAM,OAAO,CAAC;QACZ,aAAa;YAAE,MAAM;QAAK;IAC5B;IAEA;;;GAGC,GACD,MAAM,SAAS,CAAC;QACd,MAAM,UAAU;eAAI,YAAY,QAAQ,GAAG,OAAO;YAAE;SAAW;QAC/D,aAAa;YAAE;YAAS,OAAO;QAAG;IACpC;IACA;;;GAGC,GACD,MAAM,WAAW,CAAC;QAChB,aAAa;YAAE,UAAU;QAAK;IAChC;IACA;;;;GAIC,GACD,MAAM,SAAS,CAAC,IAAY;QAC1B,IAAI,UAAU;eAAI,YAAY,QAAQ,GAAG,OAAO;SAAC;QACjD,MAAM,oBAAoB,QAAQ,GAAG,CAAC,CAAC;YACrC,IAAI,KAAK,EAAE,KAAK,IAAI;gBAClB,OAAO;oBAAC,GAAG,aAAa;gBAAC;YAC3B;YACA,OAAO;QACT;QAEA,QAAQ,GAAG,CAAC,qBAAqB;QAGjC,aAAa;YAAE,aAAa;YAAe,SAAQ;YAAmB,OAAO;QAAG;IAElF;IACA;;;GAGC,GACD,MAAM,WAAW,CAAC;QAChB,aAAa;YAAE,UAAU;QAAK;IAChC;IAEA;;;GAGC,GACD,MAAM,QAAQ,CAAC;QACb,aAAa;YAAE,OAAO;QAAQ;IAChC;IACA;;;GAGC,GACD,MAAM,eAAe,CAAC;QACpB,MAAM,QAAQ,YAAY,QAAQ;QAClC,YAAY,IAAI,CAAC;YAAE,GAAG,KAAK;YAAE,GAAG,OAAO;QAAC;IAC1C;IACA,MAAM,gBAAgB;QACpB,OAAO;IACT;IACA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/handle-axios/handle-axiosApi.ts"],"sourcesContent":["import { ApiResponse } from \"../client-http/client-http-config\";\n\n\n/**\n * Handles one or multiple Axios API promises and returns their resolved data.\n *\n * @template T - The expected type of the resolved data.\n * @param axiosPromises - A single Axios promise or an array of Axios promises.\n * @returns A promise that resolves to the data of the Axios response(s).\n *          If a single promise is provided, it resolves to the data of that promise.\n *          If an array of promises is provided, it resolves to an array of data from all promises.\n *\n * @example\n * // Handling a single Axios promise\n * const data = await handleAxiosApi<MyDataType>(axios.get('/api/resource'));\n *\n * @example\n * // Handling multiple Axios promises\n * const dataArray = await handleAxiosApi<MyDataType[]>([\n *   axios.get('/api/resource1'),\n *   axios.get('/api/resource2')\n * ]);\n */\nexport async function handleAxiosApi<T>(\n  axiosPromises: Promise<ApiResponse<any>> | Promise<ApiResponse<any>>[]\n): Promise<T> {\n  axiosPromises = Array.isArray(axiosPromises) ? axiosPromises : [axiosPromises];\n\n  if (axiosPromises.length === 1) {\n    const { data } = await axiosPromises[0];\n    return data;\n  }\n\n  return Promise.all(\n    axiosPromises.map(async (promise) => {\n      const { data } = await promise;\n      return data;\n    })\n  ) as any;\n}\n"],"names":[],"mappings":";;;AAuBO,eAAe,eACpB,aAAsE;IAEtE,gBAAgB,MAAM,OAAO,CAAC,iBAAiB,gBAAgB;QAAC;KAAc;IAE9E,IAAI,cAAc,MAAM,KAAK,GAAG;QAC9B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,aAAa,CAAC,EAAE;QACvC,OAAO;IACT;IAEA,OAAO,QAAQ,GAAG,CAChB,cAAc,GAAG,CAAC,OAAO;QACvB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;QACvB,OAAO;IACT;AAEJ","debugId":null}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/providers/categories.ts"],"sourcesContent":["import { Product } from \"../models/products/products\";\n\n/**\n * This function takes an array of products and returns an array of unique categories.\n * @param {Product[]} products - An array of Product objects.\n * @returns {Array} - An array of unique categories.\n */\n\nexport function adapterAllCategories(products: Product[]): { category: string}[] {\n\n    const categories = products.reduce<{ category: string }[]>((acc, product) => {\n        const existingCategory = acc.find(item => item.category === product.category);\n        if (!existingCategory) {\n            acc.push({ category: product.category });\n        }\n        return acc;\n      }, []);\n\n      console.log(\"categories\", categories);\n      \n\n      return categories;\n\n}\n\n"],"names":[],"mappings":";;;AAQO,SAAS,qBAAqB,QAAmB;IAEpD,MAAM,aAAa,SAAS,MAAM,CAAyB,CAAC,KAAK;QAC7D,MAAM,mBAAmB,IAAI,IAAI,CAAC,CAAA,OAAQ,KAAK,QAAQ,KAAK,QAAQ,QAAQ;QAC5E,IAAI,CAAC,kBAAkB;YACnB,IAAI,IAAI,CAAC;gBAAE,UAAU,QAAQ,QAAQ;YAAC;QAC1C;QACA,OAAO;IACT,GAAG,EAAE;IAEL,QAAQ,GAAG,CAAC,cAAc;IAG1B,OAAO;AAEb","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/core/repositories/products/useProductsRepository.ts"],"sourcesContent":["import { AxiosError } from \"axios\";\n\nimport { useProductsApi } from \"@/core/apis\";\nimport { useProductsObservable } from \"@/core/state/products/useProductsState\";\nimport { handleAxiosApi } from \"@/shared/handle-axios/handle-axiosApi\";\nimport { Product } from \"@/shared/models/products/products\";\nimport { adapterAllCategories } from \"@/shared/providers/categories\";\n\n\n/**\n * A custom hook that provides a repository for managing products.\n * It includes methods for listing, retrieving, creating, updating, and managing product-related filters.\n *\n * @returns {Object} An object containing the following methods:\n * \n * - `listProduct`: Fetches and lists all products. Updates the observable with the fetched products and categories.\n * - `getProductById`: Fetches a product by its ID and updates the observable with the retrieved product.\n * - `deleteFilterCategory`: Deletes a filter category by its name and updates the observable.\n * - `addFilterCategory`: Adds a filter category by its name and updates the observable.\n * - `create`: Creates a new product and updates the observable with the created product.\n * - `update`: Updates an existing product by its ID and updates the observable with the updated product.\n * - `getProductsObservable`: Retrieves the current state of the products observable.\n */\nexport const useProductsRepository = () => {\n  const todoApi = useProductsApi();\n  const todoObservable = useProductsObservable();\n\n  /**\n   * Fetches the list of products from the API and updates the observable state.\n   * @async\n   * @throws {AxiosError} If the API call fails.\n   */\n  const listProduct = async () => {\n    try {\n      todoObservable.listing(true);\n      const product = await handleAxiosApi<Product[]>(todoApi.listProduct());\n      \n      todoObservable.categories(adapterAllCategories(product));\n      todoObservable.listProduct(product);\n      \n    } catch (error: AxiosError ) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.listing(false);\n    }\n  }\n  /**\n   * Fetches a product by its ID from the API and updates the observable state.\n   * @async\n   * @param {number} id - The ID of the product to fetch.\n   * @throws {AxiosError} If the API call fails.\n   */\n  const getProductById = async (id:number) => {\n    try {\n      todoObservable.load(true);\n      const product = await handleAxiosApi<Product>(todoApi.getProductById(id));\n\n      todoObservable.productById(product);\n      \n    } catch (error: AxiosError ) {\n      todoObservable.load(false);\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.load(false);\n    }\n  }\n\n  /**\n   * Deletes a filter category by its name and updates the observable state.\n   * @async\n   * @param {string} name - The name of the category to delete.\n   * @throws {AxiosError} If the operation fails.\n   */\n  const deleteFilterCategory = async (name:string) => {\n    try {\n      todoObservable.listing(true);\n      await todoObservable.deleteFilterCategories(name);\n    } catch (error: AxiosError ) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.listing(false);\n    }\n  }\n\n  /**\n   * Adds a filter category by its name and updates the observable state.\n   * @async\n   * @param {string} name - The name of the category to add.\n   * @throws {AxiosError} If the operation fails.\n   */\n  const addFilterCategory = async (name:string) => {\n    try {\n      todoObservable.listing(true);\n      await todoObservable.addFilterCategories(name);\n    } catch (error: AxiosError ) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.listing(false);\n    }\n  }\n\n  /**\n   * Creates a new product and updates the observable state.\n   * @async\n   * @param {Product} product - The product to create.\n   * @throws {AxiosError} If the API call fails.\n   */\n  const create = async (product: Product) => {\n    try {\n      todoObservable.creating(true);\n      const createdTodo = await handleAxiosApi<Product>(todoApi.create(product));\n      todoObservable.create(createdTodo);\n    } catch (error: AxiosError) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.creating(false);\n    }\n  }\n  /**\n   * Updates an existing product by its ID and updates the observable state.\n   * @async\n   * @param {number} id - The ID of the product to update.\n   * @param {Product} product - The updated product data.\n   * @throws {AxiosError} If the API call fails.\n   */\n  const update = async (id: number, product: Product) => {\n    try {\n      todoObservable.updating(true);\n      const updatedProduct = await handleAxiosApi<Product>(todoApi.update(id, product));\n      todoObservable.update(id, updatedProduct);\n    } catch (error: AxiosError) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.updating(false);\n    }\n  }\n  /**\n   * Retrieves the observable state for products.\n   * @returns {Observable} The observable state for products.\n   */\n  const getProductsObservable = () => todoObservable.getObservable();\n\n  return {\n    listProduct,\n    getProductById,\n    deleteFilterCategory,\n    addFilterCategory,\n    create,\n    update,\n    getProductsObservable\n  }\n}"],"names":[],"mappings":";;;AAEA;AAAA;AACA;AACA;AAEA;;;;;AAiBO,MAAM,wBAAwB;IACnC,MAAM,UAAU,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD;IAC7B,MAAM,iBAAiB,CAAA,GAAA,oJAAA,CAAA,wBAAqB,AAAD;IAE3C;;;;GAIC,GACD,MAAM,cAAc;QAClB,IAAI;YACF,eAAe,OAAO,CAAC;YACvB,MAAM,UAAU,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAa,QAAQ,WAAW;YAEnE,eAAe,UAAU,CAAC,CAAA,GAAA,wIAAA,CAAA,uBAAoB,AAAD,EAAE;YAC/C,eAAe,WAAW,CAAC;QAE7B,EAAE,OAAO,OAAoB;YAC3B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,OAAO,CAAC;QACzB;IACF;IACA;;;;;GAKC,GACD,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,eAAe,IAAI,CAAC;YACpB,MAAM,UAAU,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAW,QAAQ,cAAc,CAAC;YAErE,eAAe,WAAW,CAAC;QAE7B,EAAE,OAAO,OAAoB;YAC3B,eAAe,IAAI,CAAC;YACpB,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,IAAI,CAAC;QACtB;IACF;IAEA;;;;;GAKC,GACD,MAAM,uBAAuB,OAAO;QAClC,IAAI;YACF,eAAe,OAAO,CAAC;YACvB,MAAM,eAAe,sBAAsB,CAAC;QAC9C,EAAE,OAAO,OAAoB;YAC3B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,OAAO,CAAC;QACzB;IACF;IAEA;;;;;GAKC,GACD,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,eAAe,OAAO,CAAC;YACvB,MAAM,eAAe,mBAAmB,CAAC;QAC3C,EAAE,OAAO,OAAoB;YAC3B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,OAAO,CAAC;QACzB;IACF;IAEA;;;;;GAKC,GACD,MAAM,SAAS,OAAO;QACpB,IAAI;YACF,eAAe,QAAQ,CAAC;YACxB,MAAM,cAAc,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAW,QAAQ,MAAM,CAAC;YACjE,eAAe,MAAM,CAAC;QACxB,EAAE,OAAO,OAAmB;YAC1B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,QAAQ,CAAC;QAC1B;IACF;IACA;;;;;;GAMC,GACD,MAAM,SAAS,OAAO,IAAY;QAChC,IAAI;YACF,eAAe,QAAQ,CAAC;YACxB,MAAM,iBAAiB,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAW,QAAQ,MAAM,CAAC,IAAI;YACxE,eAAe,MAAM,CAAC,IAAI;QAC5B,EAAE,OAAO,OAAmB;YAC1B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,QAAQ,CAAC;QAC1B;IACF;IACA;;;GAGC,GACD,MAAM,wBAAwB,IAAM,eAAe,aAAa;IAEhE,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/organims/filter-categories/filter-categories.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport CheckLabel from '@/app/molecules/check-label/check-label';\nimport { useProductsRepository } from '@/core/repositories/products/useProductsRepository';\nimport { Categories } from '@/shared/models/products/products';\n\nexport default function FilterCategories() {\n    const [category, setCategory] = useState<Categories[]>([]);\n\n    useEffect(() => {\n        const subscription = useProductsRepository()\n            .getProductsObservable()\n            .subscribe((value) => {\n                setCategory(value.category);\n            });\n\n        return () => subscription.unsubscribe();\n    }, []);\n\n    const handleChange = (check: boolean, name: string) => {\n        const repository = useProductsRepository();\n        check ? repository.addFilterCategory(name) : repository.deleteFilterCategory(name);\n    };\n    if (!category) {\n        return null;\n        \n    }\n\n    return (\n        <section className=\" grid  md:grid-cols-4 place-items-center justify-around gap-4 mt-10\">\n            {category.map((cat, index) => (\n                <CheckLabel\n                    text={cat.category}\n                    id={cat.category}\n                    key={index}\n                    onChangecheck={(check, name) => handleChange(check, name)}\n                />\n            ))}\n        </section>\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;AAGe,SAAS;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAEzD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD,IACpC,qBAAqB,GACrB,SAAS,CAAC,CAAC;YACR,YAAY,MAAM,QAAQ;QAC9B;QAEJ,OAAO,IAAM,aAAa,WAAW;IACzC,GAAG,EAAE;IAEL,MAAM,eAAe,CAAC,OAAgB;QAClC,MAAM,aAAa,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD;QACvC,QAAQ,WAAW,iBAAiB,CAAC,QAAQ,WAAW,oBAAoB,CAAC;IACjF;IACA,IAAI,CAAC,UAAU;QACX,OAAO;IAEX;IAEA,qBACI,8OAAC;QAAQ,WAAU;kBACd,SAAS,GAAG,CAAC,CAAC,KAAK,sBAChB,8OAAC,4JAAA,CAAA,UAAU;gBACP,MAAM,IAAI,QAAQ;gBAClB,IAAI,IAAI,QAAQ;gBAEhB,eAAe,CAAC,OAAO,OAAS,aAAa,OAAO;eAD/C;;;;;;;;;;AAMzB","debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/atoms/chip/chip.tsx"],"sourcesContent":["export default function Chip({ text }: { text: string }) {\n    return (\n        <span className=\"bg-green-200 text-black rounded-sm p-0.5\">\n            ${text}\n        </span>\n    );\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,KAAK,EAAE,IAAI,EAAoB;IACnD,qBACI,8OAAC;QAAK,WAAU;;YAA2C;YACrD;;;;;;;AAGd","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/providers/shorter.ts"],"sourcesContent":["export const wordShortener = (paragraph:string , max:number):string =>{\n\n    const paragraphShortener = paragraph.slice(0,max)\n    return `${paragraphShortener}...`\n}"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB,CAAC,WAAmB;IAE7C,MAAM,qBAAqB,UAAU,KAAK,CAAC,GAAE;IAC7C,OAAO,GAAG,mBAAmB,GAAG,CAAC;AACrC","debugId":null}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/organims/product-card/product-card.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\nimport { useRouter } from 'next/navigation';\n\nimport Chip from '@/app/atoms/chip/chip';\nimport { Product } from '@/shared/models/products/products';\nimport { wordShortener } from '@/shared/providers/shorter';\nimport ROUTES from '@/shared/providers/routers';\nimport { roboto } from '@/app/layout';\n\nexport default function ProductCard({ id, image, title, category, price, description }: Product) {\n    const router = useRouter();\n\n    const handleCardClick = () => {\n        router.push(ROUTES.DETAIL(String(id)));\n    };\n\n    return (\n        <div\n            data-testid=\"product-card\"\n            onClick={handleCardClick}\n            className=\"flex flex-col justify-between w-[250px] h-[350px] bg-white m-[20px] rounded-lg cursor-pointer shadow-md\"\n        >\n            <section className=\"Image flex justify-center items-center w-full pt-5\">\n                <Image\n                    src={image}\n                    alt=\"imgProduct\"\n                    width={50}\n                    height={100}\n                    quality={100}\n                    data-testid=\"image-view\"\n                    style={{ objectFit: 'cover' }}\n                    className=\"w-auto rounded-lg\"\n                    priority\n                />\n            </section>\n\n            <div className=\"w-full h-auto flex flex-col gap-2 px-5 pb-7\">\n                <section className={`text-base ${roboto.variable} font-sans font-bold`}>\n                    <div>{wordShortener(title, 20)}</div>\n                </section>\n                <section className=\"Size flex justify-between\">\n                    <div className=\"Sex text-sm\">\n                        <p>{category}</p>\n                    </div>\n                    <div className=\"flex gap-1 text-sm font-sans\">\n                        <Chip text={price.toString()} />\n                    </div>\n                </section>\n                <section className=\"Price flex w-full h-[70px] my-1\">\n                    <p className={`text-xs ${roboto.variable} font-sans`}>{wordShortener(description, 120)}</p>\n                </section>\n            </div>\n        </div>\n    );\n}\n\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AATA;;;;;;;;AAWe,SAAS,YAAY,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAW;IAC3F,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,kBAAkB;QACpB,OAAO,IAAI,CAAC,qIAAA,CAAA,UAAM,CAAC,MAAM,CAAC,OAAO;IACrC;IAEA,qBACI,8OAAC;QACG,eAAY;QACZ,SAAS;QACT,WAAU;;0BAEV,8OAAC;gBAAQ,WAAU;0BACf,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBACF,KAAK;oBACL,KAAI;oBACJ,OAAO;oBACP,QAAQ;oBACR,SAAS;oBACT,eAAY;oBACZ,OAAO;wBAAE,WAAW;oBAAQ;oBAC5B,WAAU;oBACV,QAAQ;;;;;;;;;;;0BAIhB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAQ,WAAW,CAAC,UAAU,EAAE,+KAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC;kCAClE,cAAA,8OAAC;sCAAK,CAAA,GAAA,qIAAA,CAAA,gBAAa,AAAD,EAAE,OAAO;;;;;;;;;;;kCAE/B,8OAAC;wBAAQ,WAAU;;0CACf,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC;8CAAG;;;;;;;;;;;0CAER,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC,oIAAA,CAAA,UAAI;oCAAC,MAAM,MAAM,QAAQ;;;;;;;;;;;;;;;;;kCAGlC,8OAAC;wBAAQ,WAAU;kCACf,cAAA,8OAAC;4BAAE,WAAW,CAAC,QAAQ,EAAE,+KAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;sCAAG,CAAA,GAAA,qIAAA,CAAA,gBAAa,AAAD,EAAE,aAAa;;;;;;;;;;;;;;;;;;;;;;;AAKtG","debugId":null}},
    {"offset": {"line": 881, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/providers/filterProducts.ts"],"sourcesContent":["import { Categories, Product } from \"../models/products/products\";\n\n/**\n * Filters a list of products based on the provided categories.\n *\n * @param productsList - The list of products to be filtered.\n * @param filterCategories - An array of categories to filter the products by.\n * @returns A filtered list of products that belong to the specified categories.\n *\n * If the `filterCategories` array is empty, the function returns the original `productsList` without any filtering.\n */\nexport function adapterProductByCategory(productsList: Product[], filterCategories: Categories[]): Product[] {\n\n        if (filterCategories.length === 0) {\n            return productsList;\n        }\n        return productsList.filter((product) =>\n            filterCategories.some((category) => product.category === category.category)\n        );\n\n}\n"],"names":[],"mappings":";;;AAWO,SAAS,yBAAyB,YAAuB,EAAE,gBAA8B;IAExF,IAAI,iBAAiB,MAAM,KAAK,GAAG;QAC/B,OAAO;IACX;IACA,OAAO,aAAa,MAAM,CAAC,CAAC,UACxB,iBAAiB,IAAI,CAAC,CAAC,WAAa,QAAQ,QAAQ,KAAK,SAAS,QAAQ;AAGtF","debugId":null}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/organims/container-cards/container-cards.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport ProductCard from '@/app/organims/product-card/product-card';\nimport { useProductsRepository } from '@/core/repositories/products/useProductsRepository';\nimport { Product } from '@/shared/models/products/products';\nimport { adapterProductByCategory } from '@/shared/providers/filterProducts';\n\nexport default function ContainerCards() {\n    const [products, setProducts] = useState<Product[]>([]);\n\n    useEffect(() => {\n        const subscription = useProductsRepository()\n            .getProductsObservable()\n            .subscribe((value) => {\n                setProducts(adapterProductByCategory(value.product, value.filterCategories));\n            });\n\n        return () => subscription.unsubscribe();\n    }, []);\n\n\n    return (\n        <section className=\"w-full h-auto grid grid-cols-1 place-items-center md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-4 2xl:grid-cols-6\">\n            {products.map((product) => (\n                <ProductCard {...product} key={product.id} />\n            ))}\n        </section>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;;;;;;;AAEe,SAAS;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD,IACpC,qBAAqB,GACrB,SAAS,CAAC,CAAC;YACR,YAAY,CAAA,GAAA,4IAAA,CAAA,2BAAwB,AAAD,EAAE,MAAM,OAAO,EAAE,MAAM,gBAAgB;QAC9E;QAEJ,OAAO,IAAM,aAAa,WAAW;IACzC,GAAG,EAAE;IAGL,qBACI,8OAAC;QAAQ,WAAU;kBACd,SAAS,GAAG,CAAC,CAAC,wBACX,4NAAC,6JAAA,CAAA,UAAW;gBAAE,GAAG,OAAO;gBAAE,KAAK,QAAQ,EAAE;;;;;;;;;;;;;AAIzD","debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/providers/colorButton.ts"],"sourcesContent":["const baseClasses = \n    'py-2.5 px-5 me-2 mb-2 mt-2.5 text-sm font-medium focus:outline-none rounded-lg border border-gray-200 focus:z-10 focus:ring-4 focus:ring-gray-100';\n\n/**\n * An object that defines CSS class strings for different button color themes.\n * Each property represents a color theme and contains a string of concatenated\n * CSS classes for styling buttons.\n *\n * @property {string} blue - CSS classes for a blue-themed button, including background,\n *                           text color, hover, and focus styles.\n * @property {string} white - CSS classes for a white-themed button, including background,\n *                            text color, hover, and focus styles.\n * @property {string} black - CSS classes for a black-themed button, including background,\n *                            text color, hover, and focus styles.\n */\nconst colorButton = {\n    blue: `${baseClasses} bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500`,\n    white: `${baseClasses} bg-black text-white hover:bg-gray-800 focus:ring-gray-500`,\n    black: `${baseClasses} bg-white text-black hover:bg-gray-100 focus:ring-gray-500`,\n};\n\nexport const dictionaryColor = (color: string) => {\n    return colorButton[color as keyof typeof colorButton] || colorButton.white;\n};\n"],"names":[],"mappings":";;;AAAA,MAAM,cACF;AAEJ;;;;;;;;;;;CAWC,GACD,MAAM,cAAc;IAChB,MAAM,GAAG,YAAY,6DAA6D,CAAC;IACnF,OAAO,GAAG,YAAY,0DAA0D,CAAC;IACjF,OAAO,GAAG,YAAY,0DAA0D,CAAC;AACrF;AAEO,MAAM,kBAAkB,CAAC;IAC5B,OAAO,WAAW,CAAC,MAAkC,IAAI,YAAY,KAAK;AAC9E","debugId":null}},
    {"offset": {"line": 971, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/atoms/button/button.tsx"],"sourcesContent":["import { dictionaryColor } from \"@/shared/providers/colorButton\";\n\nexport default function Button({\n    text,\n    color,\n    onClickUpdate,\n}: {\n    text: string;\n    color?: \"blue\" | \"white\" | \"black\";\n    onClickUpdate?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}) {\n\n    return (\n        <button\n            onClick={(event: React.MouseEvent<HTMLButtonElement>) =>\n                onClickUpdate?.(event)\n            }\n            type=\"button\"\n            className={dictionaryColor(color || \"white\")}\n        >\n            {text}\n        </button>\n    );\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,OAAO,EAC3B,IAAI,EACJ,KAAK,EACL,aAAa,EAKhB;IAEG,qBACI,8OAAC;QACG,SAAS,CAAC,QACN,gBAAgB;QAEpB,MAAK;QACL,WAAW,CAAA,GAAA,yIAAA,CAAA,kBAAe,AAAD,EAAE,SAAS;kBAEnC;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/dasboard/home/page.tsx"],"sourcesContent":["/**\n * Home component serves as the main dashboard page for the application.\n * It initializes the product repository and fetches the list of products\n * when the component is mounted. The page includes a filter section and\n * a container for displaying product cards.\n *\n * @component\n *\n * @returns {JSX.Element} The rendered Home component.\n *\n * @remarks\n * - This component uses the `useProductsRepository` hook to interact with the product repository.\n * - The `useEffect` hook ensures that the product list is fetched when the component is mounted.\n *\n * @dependencies\n * - `FilterCategories`: A component for filtering product categories.\n * - `ContainerCards`: A component for displaying a list of product cards.\n * - `useProductsRepository`: A custom hook for managing product-related operations.\n *\n */\n'use client';\n\nimport { useEffect } from \"react\";\n\nimport FilterCategories from \"@/app/organims/filter-categories/filter-categories\";\nimport ContainerCards from \"@/app/organims/container-cards/container-cards\";\nimport { useProductsRepository } from \"@/core/repositories/products/useProductsRepository\";\nimport Button from \"@/app/atoms/button/button\";\nimport { useRouter } from \"next/navigation\";\nimport ROUTES from \"@/shared/providers/routers\";\nimport { ActivedManageState } from \"@/shared/providers/manageState\";\n\nexport default function Home() {\n    const initProducts = useProductsRepository();\n    const router = useRouter();\n\n\n    useEffect(() => {\n\n        if (initProducts.getProductsObservable().getValue().product.length === 0) {\n            initProducts.listProduct();\n        }\n        \n    }, []);\n    const handleCardClick = () => {\n        router.push(ROUTES.CREATE);\n    };\n    return (\n        <section>\n            <div className=\"h-full place-items-center\">\n                <section className=\"max-w-4xl mt-24\">\n                    <FilterCategories />\n                </section>\n                <section className=\"w-full p-5 flex justify-end\">\n                    <Button text=\"New Product\" color=\"blue\" onClickUpdate={handleCardClick}/>\n                </section>\n                <ContainerCards />\n            </div>\n        </section>\n    );\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;CAmBC;;;;AAGD;AAEA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;AAYe,SAAS;IACpB,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD;IACzC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAGvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QAEN,IAAI,aAAa,qBAAqB,GAAG,QAAQ,GAAG,OAAO,CAAC,MAAM,KAAK,GAAG;YACtE,aAAa,WAAW;QAC5B;IAEJ,GAAG,EAAE;IACL,MAAM,kBAAkB;QACpB,OAAO,IAAI,CAAC,qIAAA,CAAA,UAAM,CAAC,MAAM;IAC7B;IACA,qBACI,8OAAC;kBACG,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAQ,WAAU;8BACf,cAAA,8OAAC,uKAAA,CAAA,UAAgB;;;;;;;;;;8BAErB,8OAAC;oBAAQ,WAAU;8BACf,cAAA,8OAAC,wIAAA,CAAA,UAAM;wBAAC,MAAK;wBAAc,OAAM;wBAAO,eAAe;;;;;;;;;;;8BAE3D,8OAAC,mKAAA,CAAA,UAAc;;;;;;;;;;;;;;;;AAI/B","debugId":null}}]
}