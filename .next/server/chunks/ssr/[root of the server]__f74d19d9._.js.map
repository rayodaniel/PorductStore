{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/molecules/skeleton/skeleton.tsx"],"sourcesContent":["import React from 'react';\n\nexport default function Skeleton() {\n    return (\n        <div\n            role=\"status\"\n            className=\"space-y-8 animate-pulse md:space-y-0 md:space-x-8 rtl:space-x-reverse md:flex md:items-center\"\n        >\n            <div className=\"flex items-center justify-center w-full h-48 bg-gray-300 rounded-sm sm:w-96 dark:bg-gray-700\">\n                <svg\n                    className=\"w-10 h-10 text-gray-200 dark:text-gray-600\"\n                    aria-hidden=\"true\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 20 18\"\n                >\n                    <path d=\"M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z\" />\n                </svg>\n            </div>\n            <div className=\"w-full\">\n                <div className=\"h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-48 mb-4\" />\n                <div className=\"h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[480px] mb-2.5\" />\n                <div className=\"h-2 bg-gray-200 rounded-full dark:bg-gray-700 mb-2.5\" />\n                <div className=\"h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[440px] mb-2.5\" />\n                <div className=\"h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[460px] mb-2.5\" />\n                <div className=\"h-2 bg-gray-200 rounded-full dark:bg-gray-700 max-w-[360px]\" />\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":";;;;;AAEe,SAAS;IACpB,qBACI,8OAAC;QACG,MAAK;QACL,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBACG,WAAU;oBACV,eAAY;oBACZ,OAAM;oBACN,MAAK;oBACL,SAAQ;8BAER,cAAA,8OAAC;wBAAK,GAAE;;;;;;;;;;;;;;;;0BAGhB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAI/B","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/core/apis/products/useProductsApi.ts"],"sourcesContent":["import axios from \"axios\"; // Importa desde el mismo mÃ³dulo\n\nimport { ApiResponse } from \"@/shared/client-http/client-http-config\";\nimport { Product } from \"@/shared/models/products/products\";\n\nconst baseApi = process.env.NEXT_PUBLIC_API_URL || \"https://fakestoreapi.com\";\n\nexport const useProductsApi = () => {\n\n  /**\n   * Fetches a list of products from the API.\n   * \n   * @returns {Promise<ApiResponse<Product[]>>} A promise that resolves to the API response containing an array of products.\n   */\n  const listProduct = (): Promise<ApiResponse<Product[]>> => {\n    \n    return axios.get(`${baseApi}/products`) as Promise<ApiResponse<Product[]>>;\n  }\n\n  /**\n   * Fetches a single product by its ID from the API.\n   * \n   * @param {number} id - The ID of the product to fetch.\n   * @returns {Promise<ApiResponse<Product>>} A promise that resolves to the API response containing the product.\n   */\n  const getProductById = (id:number): Promise<ApiResponse<Product>> => {\n    \n    return axios.get(`${baseApi}/products/${id}`) as Promise<ApiResponse<Product>>;\n  }\n  /**\n   * Creates a new product in the API.\n   * \n   * @param {Product} product - The product data to create.\n   * @returns {Promise<ApiResponse<Product>>} A promise that resolves to the API response containing the created product.\n   */\n  const create = (product: Product): Promise<ApiResponse<Product>> => {\n    return axios.post(`${baseApi}/products`, product) as Promise<ApiResponse<Product>>;\n  }\n  /**\n   * Updates an existing product in the API.\n   * \n   * @param {number} id - The ID of the product to update.\n   * @param {Product} product - The updated product data.\n   * @returns {Promise<ApiResponse<Product>>} A promise that resolves to the API response containing the updated product.\n   */\n  const update = (id: number, product: Product): Promise<ApiResponse<Product>> => {\n    return axios.put(`${baseApi}/products/${id}`, product) as Promise<ApiResponse<Product>>;\n  }\n  \n\n  return { listProduct,getProductById, create, update }\n}"],"names":[],"mappings":";;;AAAA,yOAA2B,gCAAgC;;AAK3D,MAAM,UAAU,gEAAmC;AAE5C,MAAM,iBAAiB;IAE5B;;;;GAIC,GACD,MAAM,cAAc;QAElB,OAAO,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,SAAS,CAAC;IACxC;IAEA;;;;;GAKC,GACD,MAAM,iBAAiB,CAAC;QAEtB,OAAO,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,UAAU,EAAE,IAAI;IAC9C;IACA;;;;;GAKC,GACD,MAAM,SAAS,CAAC;QACd,OAAO,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,SAAS,CAAC,EAAE;IAC3C;IACA;;;;;;GAMC,GACD,MAAM,SAAS,CAAC,IAAY;QAC1B,OAAO,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,UAAU,EAAE,IAAI,EAAE;IAChD;IAGA,OAAO;QAAE;QAAY;QAAgB;QAAQ;IAAO;AACtD","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/core/state/products/useProductsState.ts"],"sourcesContent":["import { BehaviorSubject } from \"rxjs\"\n\nimport { Categories, Product, ProductPayload, ProductState} from \"@/shared/models/products/products\";\n\n\nexport const initialState = {\n  product: [],\n  productById:{} as Product,\n  category:[],\n  filterCategories: [],\n  listing: false,\n  load: false,\n  creating: false,\n  updating: false,\n  removing: false,\n  error: \"\"\n}\n\nconst todoSubject = new BehaviorSubject<ProductState>(initialState);\n\n/**\n * Hook to manage the state of products using an observable pattern.\n * Provides methods to manipulate and retrieve product-related state.\n */\nexport const useProductsObservable = () => {\n  /**\n   * Updates the state with a list of products.\n   * @param product - Array of products to set in the state.\n   */\n  const listProduct = (product: Product[]) => {\n    setNextState({ product, error: \"\" });\n  }\n  /**\n   * Updates the state with a single product by its ID.\n   * @param product - The product to set in the state.\n   */\n  const productById = (product: Product) => {\n    setNextState({productById:product, error: \"\" });\n  }\n  /**\n   * Updates the state with a list of categories.\n   * @param category - Array of categories to set in the state.\n   */\n  const categories = (category: Categories[]) => {\n    \n    setNextState({ category, error: \"\" });\n  }\n  /**\n   * Removes a category from the filter categories in the state.\n   * @param name - The name of the category to remove.\n   */\n  const deleteFilterCategories = (name:string) => {\n    const filterCategories = [...todoSubject.getValue().filterCategories].filter(category => category.category !== name);\n    setNextState({ filterCategories, error: \"\" });\n  }\n  /**\n   * Adds a category to the filter categories in the state.\n   * @param name - The name of the category to add.\n   */\n  const addFilterCategories = (name:string) => {\n    const filterCategories = [...todoSubject.getValue().filterCategories, { category: name }];\n    setNextState({ filterCategories, error: \"\" });\n  }\n  /**\n   * Updates the state to indicate whether products are being listed.\n   * @param flag - Boolean flag indicating the listing state.\n   */\n  const listing = (flag: boolean) => {\n    setNextState({ listing: flag });\n  }\n  /**\n   * Updates the state to indicate whether the application is loading.\n   * @param flag - Boolean flag indicating the loading state.\n   */\n  const load = (flag: boolean) => {\n    setNextState({ load: flag });\n  }\n\n  /**\n   * Adds a new product to the state.\n   * @param newProduct - The new product to add.\n   */\n  const create = (newProduct: Product) => {\n    const product = [...todoSubject.getValue().product, newProduct];\n    setNextState({ product, error: \"\" });\n  }\n  /**\n   * Updates the state to indicate whether a product is being created.\n   * @param flag - Boolean flag indicating the creating state.\n   */\n  const creating = (flag: boolean) => {\n    setNextState({ creating: flag });\n  }\n  /**\n   * Updates a product in the state by its ID.\n   * @param id - The ID of the product to update.\n   * @param productUpdate - The updated product data.\n   */\n  const update = (id: number, productUpdate: Product) => {\n    let product = [...todoSubject.getValue().product];\n    const updateListProduct = product.map((item) => {\n      if (item.id === id) {\n        return {...productUpdate };\n      }\n      return item;\n    });\n\n    console.log(\"updateListProduct\", updateListProduct);\n    \n\n    setNextState({ productById: productUpdate, product:updateListProduct, error: \"\" })\n\n  }\n  /**\n   * Updates the state to indicate whether a product is being updated.\n   * @param flag - Boolean flag indicating the updating state.\n   */\n  const updating = (flag: boolean) => {\n    setNextState({ updating: flag });\n  }\n\n  /**\n   * Updates the state with an error message.\n   * @param message - The error message to set.\n   */\n  const error = (message: string) => {\n    setNextState({ error: message });\n  }\n  /**\n   * Updates the state with the provided payload.\n   * @param payload - The payload to merge into the current state.\n   */\n  const setNextState = (payload: ProductPayload) => {\n    const state = todoSubject.getValue();\n    todoSubject.next({ ...state, ...payload } as ProductState);\n  }\n  const getObservable = () => {\n    return todoSubject;\n  }\n  return {\n    listProduct,\n    load,\n    productById,\n    categories,\n    deleteFilterCategories,\n    addFilterCategories,\n    listing,\n    create,\n    creating,\n    update,\n    updating,\n    error,\n    getObservable\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAKO,MAAM,eAAe;IAC1B,SAAS,EAAE;IACX,aAAY,CAAC;IACb,UAAS,EAAE;IACX,kBAAkB,EAAE;IACpB,SAAS;IACT,MAAM;IACN,UAAU;IACV,UAAU;IACV,UAAU;IACV,OAAO;AACT;AAEA,MAAM,cAAc,IAAI,4IAAA,CAAA,kBAAe,CAAe;AAM/C,MAAM,wBAAwB;IACnC;;;GAGC,GACD,MAAM,cAAc,CAAC;QACnB,aAAa;YAAE;YAAS,OAAO;QAAG;IACpC;IACA;;;GAGC,GACD,MAAM,cAAc,CAAC;QACnB,aAAa;YAAC,aAAY;YAAS,OAAO;QAAG;IAC/C;IACA;;;GAGC,GACD,MAAM,aAAa,CAAC;QAElB,aAAa;YAAE;YAAU,OAAO;QAAG;IACrC;IACA;;;GAGC,GACD,MAAM,yBAAyB,CAAC;QAC9B,MAAM,mBAAmB;eAAI,YAAY,QAAQ,GAAG,gBAAgB;SAAC,CAAC,MAAM,CAAC,CAAA,WAAY,SAAS,QAAQ,KAAK;QAC/G,aAAa;YAAE;YAAkB,OAAO;QAAG;IAC7C;IACA;;;GAGC,GACD,MAAM,sBAAsB,CAAC;QAC3B,MAAM,mBAAmB;eAAI,YAAY,QAAQ,GAAG,gBAAgB;YAAE;gBAAE,UAAU;YAAK;SAAE;QACzF,aAAa;YAAE;YAAkB,OAAO;QAAG;IAC7C;IACA;;;GAGC,GACD,MAAM,UAAU,CAAC;QACf,aAAa;YAAE,SAAS;QAAK;IAC/B;IACA;;;GAGC,GACD,MAAM,OAAO,CAAC;QACZ,aAAa;YAAE,MAAM;QAAK;IAC5B;IAEA;;;GAGC,GACD,MAAM,SAAS,CAAC;QACd,MAAM,UAAU;eAAI,YAAY,QAAQ,GAAG,OAAO;YAAE;SAAW;QAC/D,aAAa;YAAE;YAAS,OAAO;QAAG;IACpC;IACA;;;GAGC,GACD,MAAM,WAAW,CAAC;QAChB,aAAa;YAAE,UAAU;QAAK;IAChC;IACA;;;;GAIC,GACD,MAAM,SAAS,CAAC,IAAY;QAC1B,IAAI,UAAU;eAAI,YAAY,QAAQ,GAAG,OAAO;SAAC;QACjD,MAAM,oBAAoB,QAAQ,GAAG,CAAC,CAAC;YACrC,IAAI,KAAK,EAAE,KAAK,IAAI;gBAClB,OAAO;oBAAC,GAAG,aAAa;gBAAC;YAC3B;YACA,OAAO;QACT;QAEA,QAAQ,GAAG,CAAC,qBAAqB;QAGjC,aAAa;YAAE,aAAa;YAAe,SAAQ;YAAmB,OAAO;QAAG;IAElF;IACA;;;GAGC,GACD,MAAM,WAAW,CAAC;QAChB,aAAa;YAAE,UAAU;QAAK;IAChC;IAEA;;;GAGC,GACD,MAAM,QAAQ,CAAC;QACb,aAAa;YAAE,OAAO;QAAQ;IAChC;IACA;;;GAGC,GACD,MAAM,eAAe,CAAC;QACpB,MAAM,QAAQ,YAAY,QAAQ;QAClC,YAAY,IAAI,CAAC;YAAE,GAAG,KAAK;YAAE,GAAG,OAAO;QAAC;IAC1C;IACA,MAAM,gBAAgB;QACpB,OAAO;IACT;IACA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/handle-axios/handle-axiosApi.ts"],"sourcesContent":["import { ApiResponse } from \"../client-http/client-http-config\";\n\n\n/**\n * Handles one or multiple Axios API promises and returns their resolved data.\n *\n * @template T - The expected type of the resolved data.\n * @param axiosPromises - A single Axios promise or an array of Axios promises.\n * @returns A promise that resolves to the data of the Axios response(s).\n *          If a single promise is provided, it resolves to the data of that promise.\n *          If an array of promises is provided, it resolves to an array of data from all promises.\n *\n * @example\n * // Handling a single Axios promise\n * const data = await handleAxiosApi<MyDataType>(axios.get('/api/resource'));\n *\n * @example\n * // Handling multiple Axios promises\n * const dataArray = await handleAxiosApi<MyDataType[]>([\n *   axios.get('/api/resource1'),\n *   axios.get('/api/resource2')\n * ]);\n */\nexport async function handleAxiosApi<T>(\n  axiosPromises: Promise<ApiResponse<any>> | Promise<ApiResponse<any>>[]\n): Promise<T> {\n  axiosPromises = Array.isArray(axiosPromises) ? axiosPromises : [axiosPromises];\n\n  if (axiosPromises.length === 1) {\n    const { data } = await axiosPromises[0];\n    return data;\n  }\n\n  return Promise.all(\n    axiosPromises.map(async (promise) => {\n      const { data } = await promise;\n      return data;\n    })\n  ) as any;\n}\n"],"names":[],"mappings":";;;AAuBO,eAAe,eACpB,aAAsE;IAEtE,gBAAgB,MAAM,OAAO,CAAC,iBAAiB,gBAAgB;QAAC;KAAc;IAE9E,IAAI,cAAc,MAAM,KAAK,GAAG;QAC9B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,aAAa,CAAC,EAAE;QACvC,OAAO;IACT;IAEA,OAAO,QAAQ,GAAG,CAChB,cAAc,GAAG,CAAC,OAAO;QACvB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;QACvB,OAAO;IACT;AAEJ","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/providers/categories.ts"],"sourcesContent":["import { Product } from \"../models/products/products\";\n\n/**\n * This function takes an array of products and returns an array of unique categories.\n * @param {Product[]} products - An array of Product objects.\n * @returns {Array} - An array of unique categories.\n */\n\nexport function adapterAllCategories(products: Product[]): { category: string}[] {\n\n    const categories = products.reduce<{ category: string }[]>((acc, product) => {\n        const existingCategory = acc.find(item => item.category === product.category);\n        if (!existingCategory) {\n            acc.push({ category: product.category });\n        }\n        return acc;\n      }, []);\n\n      console.log(\"categories\", categories);\n      \n\n      return categories;\n\n}\n\n"],"names":[],"mappings":";;;AAQO,SAAS,qBAAqB,QAAmB;IAEpD,MAAM,aAAa,SAAS,MAAM,CAAyB,CAAC,KAAK;QAC7D,MAAM,mBAAmB,IAAI,IAAI,CAAC,CAAA,OAAQ,KAAK,QAAQ,KAAK,QAAQ,QAAQ;QAC5E,IAAI,CAAC,kBAAkB;YACnB,IAAI,IAAI,CAAC;gBAAE,UAAU,QAAQ,QAAQ;YAAC;QAC1C;QACA,OAAO;IACT,GAAG,EAAE;IAEL,QAAQ,GAAG,CAAC,cAAc;IAG1B,OAAO;AAEb","debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/core/repositories/products/useProductsRepository.ts"],"sourcesContent":["import { AxiosError } from \"axios\";\n\nimport { useProductsApi } from \"@/core/apis\";\nimport { useProductsObservable } from \"@/core/state/products/useProductsState\";\nimport { handleAxiosApi } from \"@/shared/handle-axios/handle-axiosApi\";\nimport { Product } from \"@/shared/models/products/products\";\nimport { adapterAllCategories } from \"@/shared/providers/categories\";\n\n\n/**\n * A custom hook that provides a repository for managing products.\n * It includes methods for listing, retrieving, creating, updating, and managing product-related filters.\n *\n * @returns {Object} An object containing the following methods:\n * \n * - `listProduct`: Fetches and lists all products. Updates the observable with the fetched products and categories.\n * - `getProductById`: Fetches a product by its ID and updates the observable with the retrieved product.\n * - `deleteFilterCategory`: Deletes a filter category by its name and updates the observable.\n * - `addFilterCategory`: Adds a filter category by its name and updates the observable.\n * - `create`: Creates a new product and updates the observable with the created product.\n * - `update`: Updates an existing product by its ID and updates the observable with the updated product.\n * - `getProductsObservable`: Retrieves the current state of the products observable.\n */\nexport const useProductsRepository = () => {\n  const todoApi = useProductsApi();\n  const todoObservable = useProductsObservable();\n\n  /**\n   * Fetches the list of products from the API and updates the observable state.\n   * @async\n   * @throws {AxiosError} If the API call fails.\n   */\n  const listProduct = async () => {\n    try {\n      todoObservable.listing(true);\n      const product = await handleAxiosApi<Product[]>(todoApi.listProduct());\n      \n      todoObservable.categories(adapterAllCategories(product));\n      todoObservable.listProduct(product);\n      \n    } catch (error: AxiosError ) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.listing(false);\n    }\n  }\n  /**\n   * Fetches a product by its ID from the API and updates the observable state.\n   * @async\n   * @param {number} id - The ID of the product to fetch.\n   * @throws {AxiosError} If the API call fails.\n   */\n  const getProductById = async (id:number) => {\n    try {\n      todoObservable.load(true);\n      const product = await handleAxiosApi<Product>(todoApi.getProductById(id));\n\n      todoObservable.productById(product);\n      \n    } catch (error: AxiosError ) {\n      todoObservable.load(false);\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.load(false);\n    }\n  }\n\n  /**\n   * Deletes a filter category by its name and updates the observable state.\n   * @async\n   * @param {string} name - The name of the category to delete.\n   * @throws {AxiosError} If the operation fails.\n   */\n  const deleteFilterCategory = async (name:string) => {\n    try {\n      todoObservable.listing(true);\n      await todoObservable.deleteFilterCategories(name);\n    } catch (error: AxiosError ) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.listing(false);\n    }\n  }\n\n  /**\n   * Adds a filter category by its name and updates the observable state.\n   * @async\n   * @param {string} name - The name of the category to add.\n   * @throws {AxiosError} If the operation fails.\n   */\n  const addFilterCategory = async (name:string) => {\n    try {\n      todoObservable.listing(true);\n      await todoObservable.addFilterCategories(name);\n    } catch (error: AxiosError ) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.listing(false);\n    }\n  }\n\n  /**\n   * Creates a new product and updates the observable state.\n   * @async\n   * @param {Product} product - The product to create.\n   * @throws {AxiosError} If the API call fails.\n   */\n  const create = async (product: Product) => {\n    try {\n      todoObservable.creating(true);\n      const createdTodo = await handleAxiosApi<Product>(todoApi.create(product));\n      todoObservable.create(createdTodo);\n    } catch (error: AxiosError) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.creating(false);\n    }\n  }\n  /**\n   * Updates an existing product by its ID and updates the observable state.\n   * @async\n   * @param {number} id - The ID of the product to update.\n   * @param {Product} product - The updated product data.\n   * @throws {AxiosError} If the API call fails.\n   */\n  const update = async (id: number, product: Product) => {\n    try {\n      todoObservable.updating(true);\n      const updatedProduct = await handleAxiosApi<Product>(todoApi.update(id, product));\n      todoObservable.update(id, updatedProduct);\n    } catch (error: AxiosError) {\n      todoObservable.error(error.message as string);\n    } finally {\n      todoObservable.updating(false);\n    }\n  }\n  /**\n   * Retrieves the observable state for products.\n   * @returns {Observable} The observable state for products.\n   */\n  const getProductsObservable = () => todoObservable.getObservable();\n\n  return {\n    listProduct,\n    getProductById,\n    deleteFilterCategory,\n    addFilterCategory,\n    create,\n    update,\n    getProductsObservable\n  }\n}"],"names":[],"mappings":";;;AAEA;AAAA;AACA;AACA;AAEA;;;;;AAiBO,MAAM,wBAAwB;IACnC,MAAM,UAAU,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD;IAC7B,MAAM,iBAAiB,CAAA,GAAA,oJAAA,CAAA,wBAAqB,AAAD;IAE3C;;;;GAIC,GACD,MAAM,cAAc;QAClB,IAAI;YACF,eAAe,OAAO,CAAC;YACvB,MAAM,UAAU,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAa,QAAQ,WAAW;YAEnE,eAAe,UAAU,CAAC,CAAA,GAAA,wIAAA,CAAA,uBAAoB,AAAD,EAAE;YAC/C,eAAe,WAAW,CAAC;QAE7B,EAAE,OAAO,OAAoB;YAC3B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,OAAO,CAAC;QACzB;IACF;IACA;;;;;GAKC,GACD,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,eAAe,IAAI,CAAC;YACpB,MAAM,UAAU,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAW,QAAQ,cAAc,CAAC;YAErE,eAAe,WAAW,CAAC;QAE7B,EAAE,OAAO,OAAoB;YAC3B,eAAe,IAAI,CAAC;YACpB,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,IAAI,CAAC;QACtB;IACF;IAEA;;;;;GAKC,GACD,MAAM,uBAAuB,OAAO;QAClC,IAAI;YACF,eAAe,OAAO,CAAC;YACvB,MAAM,eAAe,sBAAsB,CAAC;QAC9C,EAAE,OAAO,OAAoB;YAC3B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,OAAO,CAAC;QACzB;IACF;IAEA;;;;;GAKC,GACD,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,eAAe,OAAO,CAAC;YACvB,MAAM,eAAe,mBAAmB,CAAC;QAC3C,EAAE,OAAO,OAAoB;YAC3B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,OAAO,CAAC;QACzB;IACF;IAEA;;;;;GAKC,GACD,MAAM,SAAS,OAAO;QACpB,IAAI;YACF,eAAe,QAAQ,CAAC;YACxB,MAAM,cAAc,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAW,QAAQ,MAAM,CAAC;YACjE,eAAe,MAAM,CAAC;QACxB,EAAE,OAAO,OAAmB;YAC1B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,QAAQ,CAAC;QAC1B;IACF;IACA;;;;;;GAMC,GACD,MAAM,SAAS,OAAO,IAAY;QAChC,IAAI;YACF,eAAe,QAAQ,CAAC;YACxB,MAAM,iBAAiB,MAAM,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAW,QAAQ,MAAM,CAAC,IAAI;YACxE,eAAe,MAAM,CAAC,IAAI;QAC5B,EAAE,OAAO,OAAmB;YAC1B,eAAe,KAAK,CAAC,MAAM,OAAO;QACpC,SAAU;YACR,eAAe,QAAQ,CAAC;QAC1B;IACF;IACA;;;GAGC,GACD,MAAM,wBAAwB,IAAM,eAAe,aAAa;IAEhE,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/atoms/container-detail/container-detail.tsx"],"sourcesContent":["import React from 'react';\n\n\nexport default function ContainerDetail({\n    componentLeft,\n    componentRight,\n}: {\n    componentLeft: React.ReactNode;\n    componentRight: React.ReactNode;\n}) {\n    return (\n        <section className=\"sm:flex w-auto md:w-[860px] max-w-4xl h-auto min-h-96\">\n            <div className=\"flex justify-center w-full sm:w-1/2\">\n                {componentLeft}\n            </div>\n            <div className=\"w-full sm:w-1/2\">\n                {componentRight}\n            </div>\n        </section>\n    );\n}\n"],"names":[],"mappings":";;;;;AAGe,SAAS,gBAAgB,EACpC,aAAa,EACb,cAAc,EAIjB;IACG,qBACI,8OAAC;QAAQ,WAAU;;0BACf,8OAAC;gBAAI,WAAU;0BACV;;;;;;0BAEL,8OAAC;gBAAI,WAAU;0BACV;;;;;;;;;;;;AAIjB","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/providers/colorButton.ts"],"sourcesContent":["const baseClasses = \n    'py-2.5 px-5 me-2 mb-2 mt-2.5 text-sm font-medium focus:outline-none rounded-lg border border-gray-200 focus:z-10 focus:ring-4 focus:ring-gray-100';\n\n/**\n * An object that defines CSS class strings for different button color themes.\n * Each property represents a color theme and contains a string of concatenated\n * CSS classes for styling buttons.\n *\n * @property {string} blue - CSS classes for a blue-themed button, including background,\n *                           text color, hover, and focus styles.\n * @property {string} white - CSS classes for a white-themed button, including background,\n *                            text color, hover, and focus styles.\n * @property {string} black - CSS classes for a black-themed button, including background,\n *                            text color, hover, and focus styles.\n */\nconst colorButton = {\n    blue: `${baseClasses} bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500`,\n    white: `${baseClasses} bg-black text-white hover:bg-gray-800 focus:ring-gray-500`,\n    black: `${baseClasses} bg-white text-black hover:bg-gray-100 focus:ring-gray-500`,\n};\n\nexport const dictionaryColor = (color: string) => {\n    return colorButton[color as keyof typeof colorButton] || colorButton.white;\n};\n"],"names":[],"mappings":";;;AAAA,MAAM,cACF;AAEJ;;;;;;;;;;;CAWC,GACD,MAAM,cAAc;IAChB,MAAM,GAAG,YAAY,6DAA6D,CAAC;IACnF,OAAO,GAAG,YAAY,0DAA0D,CAAC;IACjF,OAAO,GAAG,YAAY,0DAA0D,CAAC;AACrF;AAEO,MAAM,kBAAkB,CAAC;IAC5B,OAAO,WAAW,CAAC,MAAkC,IAAI,YAAY,KAAK;AAC9E","debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/atoms/button/button.tsx"],"sourcesContent":["import { dictionaryColor } from \"@/shared/providers/colorButton\";\n\nexport default function Button({\n    text,\n    color,\n    onClickUpdate,\n}: {\n    text: string;\n    color?: \"blue\" | \"white\" | \"black\";\n    onClickUpdate?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}) {\n\n    return (\n        <button\n            onClick={(event: React.MouseEvent<HTMLButtonElement>) =>\n                onClickUpdate?.(event)\n            }\n            type=\"button\"\n            className={dictionaryColor(color || \"white\")}\n        >\n            {text}\n        </button>\n    );\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,OAAO,EAC3B,IAAI,EACJ,KAAK,EACL,aAAa,EAKhB;IAEG,qBACI,8OAAC;QACG,SAAS,CAAC,QACN,gBAAgB;QAEpB,MAAK;QACL,WAAW,CAAA,GAAA,yIAAA,CAAA,kBAAe,AAAD,EAAE,SAAS;kBAEnC;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/atoms/chip/chip.tsx"],"sourcesContent":["export default function Chip({ text }: { text: string }) {\n    return (\n        <span className=\"bg-green-200 text-black rounded-sm p-0.5\">\n            ${text}\n        </span>\n    );\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,KAAK,EAAE,IAAI,EAAoB;IACnD,qBACI,8OAAC;QAAK,WAAU;;YAA2C;YACrD;;;;;;;AAGd","debugId":null}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/molecules/detail-product-card/detail-product-card.tsx"],"sourcesContent":["import Button from \"@/app/atoms/button/button\";\nimport Chip from \"@/app/atoms/chip/chip\";\nimport { Product } from \"@/shared/models/products/products\";\n\nexport default function DetailCard({ product, onClickUpdate }: { product: Product; onClickUpdate: (e: React.MouseEvent<HTMLButtonElement>) => void }) {\n    return (\n        <div className=\"flex flex-col justify-center items-start w-[100%] \">\n            <section>\n                <div className=\"title text-black text-2xl\">{product.title}</div>\n                <div className=\"title my-4\">\n                    <label htmlFor=\"category\">Categoria: </label>\n                    {product.category}\n                </div>\n                <div className=\"price my-4\">\n                    <Chip text={product.price.toString()} />\n                </div>\n            </section>\n            <section>\n                <div className=\"descripcion\">{product.description}</div>\n            </section>\n            <Button text=\"Actualizar\" onClickUpdate={(e) => onClickUpdate?.(e)} />\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAGe,SAAS,WAAW,EAAE,OAAO,EAAE,aAAa,EAAyF;IAChJ,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;;kCACG,8OAAC;wBAAI,WAAU;kCAA6B,QAAQ,KAAK;;;;;;kCACzD,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAM,SAAQ;0CAAW;;;;;;4BACzB,QAAQ,QAAQ;;;;;;;kCAErB,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,oIAAA,CAAA,UAAI;4BAAC,MAAM,QAAQ,KAAK,CAAC,QAAQ;;;;;;;;;;;;;;;;;0BAG1C,8OAAC;0BACG,cAAA,8OAAC;oBAAI,WAAU;8BAAe,QAAQ,WAAW;;;;;;;;;;;0BAErD,8OAAC,wIAAA,CAAA,UAAM;gBAAC,MAAK;gBAAa,eAAe,CAAC,IAAM,gBAAgB;;;;;;;;;;;;AAG5E","debugId":null}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/organims/detail-product-card/detail-product-card.tsx"],"sourcesContent":["import Image from 'next/image';\nimport React from 'react';\n\nimport ContainerDetail from '@/app/atoms/container-detail/container-detail';\nimport DetailCard from '@/app/molecules/detail-product-card/detail-product-card';\nimport { Product } from '@/shared/models/products/products';\n\nexport default function DetailProductCard({\n    product,\n    onClickUpdate,\n}: {\n    product: Product;\n    onClickUpdate: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}) {\n    return (\n        <ContainerDetail\n            componentLeft={(\n                <Image\n                    src={product.image}\n                    alt=\"imgProduct\"\n                    width={200}\n                    height={200}\n                    quality={100}\n                    style={{ objectFit: 'cover' }}\n                    className=\"w-auto rounded-lg\"\n                    priority\n                />\n            )}\n            componentRight={(\n                <DetailCard\n                    onClickUpdate={(e) => onClickUpdate(e)}\n                    product={product}\n                />\n            )}\n        />\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AAGA;AACA;;;;;AAGe,SAAS,kBAAkB,EACtC,OAAO,EACP,aAAa,EAIhB;IACG,qBACI,8OAAC,kKAAA,CAAA,UAAe;QACZ,6BACI,8OAAC,6HAAA,CAAA,UAAK;YACF,KAAK,QAAQ,KAAK;YAClB,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,SAAS;YACT,OAAO;gBAAE,WAAW;YAAQ;YAC5B,WAAU;YACV,QAAQ;;;;;;QAGhB,8BACI,8OAAC,kLAAA,CAAA,UAAU;YACP,eAAe,CAAC,IAAM,cAAc;YACpC,SAAS;;;;;;;;;;;AAK7B","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/shared/providers/validatorsForm.ts"],"sourcesContent":["import * as z from 'zod';\n\n/**\n * Schema definition for validating a product object using Zod.\n * \n * This schema ensures that the product object adheres to the following rules:\n * \n * - `id`: Must be a number.\n * - `title`: Must be a string with a minimum length of 1 character and a maximum length of 25 characters.\n *   - Error messages:\n *     - \"El tÃ­tulo es requerido\" if the title is empty.\n *     - \"El tÃ­tulo no puede exceder los 25 caracteres\" if the title exceeds 25 characters.\n * - `price`: Must be a number with a minimum value of 0.1.\n *   - Error message:\n *     - \"El precio mÃ­nimo es 0.1\" if the price is less than 0.1.\n * - `description`: Must be a string with a minimum length of 10 characters and a maximum length of 150 characters.\n *   - Error messages:\n *     - \"La descripciÃ³n debe tener al menos 10 caracteres\" if the description is too short.\n *     - \"La descripciÃ³n no puede exceder los 150 caracteres\" if the description is too long.\n * - `category`: Must be a string with a minimum length of 1 character and a maximum length of 20 characters.\n *   - Error messages:\n *     - \"La categorÃ­a es requerida\" if the category is empty.\n *     - \"La categorÃ­a no puede exceder los 20 caracteres\" if the category exceeds 20 characters.\n * - `image`: Must be a valid URL string.\n *   - Error message:\n *     - \"Debe ser una URL vÃ¡lida\" if the image is not a valid URL.\n */\nexport const productSchema = z.object({\n    id: z.number(),\n    title: z.string().min(1, 'El tÃ­tulo es requerido').max(25, 'El tÃ­tulo no puede exceder los 25 caracteres'),\n    price: z.number().min(0.1, 'El precio mÃ­nimo es 0.1'),\n    description: z.string().min(10, 'La descripciÃ³n debe tener al menos 10 caracteres').max(150, 'La descripciÃ³n no puede exceder los 150 caracteres'),\n    category: z.string().min(1, 'La categorÃ­a es requerida').max(20, 'La categorÃ­a no puede exceder los 20 caracteres'),\n    image: z.string().url('Debe ser una URL vÃ¡lida')\n  });"],"names":[],"mappings":";;;AAAA;;AA2BO,MAAM,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IAClC,IAAI,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD;IACX,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG,0BAA0B,GAAG,CAAC,IAAI;IAC3D,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,KAAK;IAC3B,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,IAAI,oDAAoD,GAAG,CAAC,KAAK;IAC7F,UAAU,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,IAAI;IACjE,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 919, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/organims/form-update-product/form-update-product.tsx"],"sourcesContent":["import { ProductFormData, ProductFormProps } from '@/shared/models/organims/organims';\nimport { productSchema } from '@/shared/providers/validatorsForm';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\n\n\nexport function UpdateProductForm({ initialData, onSubmit, isLoading }: ProductFormProps) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm<ProductFormData>({\n    resolver: zodResolver(productSchema),\n    defaultValues: initialData || {\n      id: 0,\n      title: '',\n      price: 0.1,\n      description: '',\n      category: '',\n      image: ''\n    }\n  });\n\n  useEffect(() => {\n    if (initialData) {\n      reset(initialData);\n    }\n  }, [initialData, reset]);\n\n  return (\n    <div className='md:w-[370px] w-[100%] px-7'>\n\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input type=\"hidden\" {...register('id')} />\n\n      <div>\n        <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">\n          TÃ­tulo del producto\n        </label>\n        <input type=\"text\" id=\"first_name\" className=\" \" />\n        <input\n          id=\"title\"\n          type=\"text\"\n          {...register('title')}\n          className={`bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 ${\n            errors.title ? 'border-red-500' : 'border'\n          }`}\n        />\n        {errors.title && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.title.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\n          Precio\n        </label>\n        <input\n          id=\"price\"\n          type=\"number\"\n          step=\"0.01\"\n          {...register('price', { valueAsNumber: true })}\n          className={`bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 ${\n            errors.price ? 'border-red-500' : 'border'\n          }`}\n        />\n        {errors.price && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.price.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n          DescripciÃ³n\n        </label>\n        <textarea\n          id=\"description\"\n          rows={4}\n          {...register('description')}\n          className={`bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 ${\n            errors.description ? 'border-red-500' : 'border'\n          }`}\n        />\n        {errors.description && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.description.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">\n          CategorÃ­a\n        </label>\n        <input\n          id=\"category\"\n          {...register('category')}\n          className={`bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 ${\n            errors.category ? 'border-red-500' : 'border'\n          }`}\n        />\n        {errors.category && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.category.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700\">\n          URL de la imagen\n        </label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          {...register('image')}\n          className={`bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 ${\n            errors.image ? 'border-red-500' : 'border'\n          }`}\n        />\n        {errors.image && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.image.message}</p>\n        )}\n      </div>\n\n      <div>\n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          className=\"inline-flex mt-1.5 justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n            Guardar cambios\n        </button>\n      </div>\n    </form>\n    </div>\n\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1185, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/organims/update-product/update-product.tsx"],"sourcesContent":["import Image from 'next/image';\n\nimport ContainerDetail from '@/app/atoms/container-detail/container-detail';\nimport { Product } from '@/shared/models/products/products';\nimport { UpdateProductForm } from '../form-update-product/form-update-product';\n\n\nexport default function UpdateProduct({\n    product,\n    handleSubmit,\n}: {\n    product: Product;\n    handleSubmit: (data: Product) => void;\n}) {\n\n    return (\n        <ContainerDetail\n            componentLeft={(\n                <Image\n                    src={product.image}\n                    alt=\"imgProduct\"\n                    width={200}\n                    height={200}\n                    quality={100}\n                    style={{ objectFit: 'cover' }}\n                    className=\"w-auto rounded-lg\"\n                    priority\n                />\n            )}\n            componentRight={(\n                <UpdateProductForm\n                    initialData={product}\n                    onSubmit={(data) => handleSubmit(data)}\n                />\n            )}\n        />\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;;;;;AAGe,SAAS,cAAc,EAClC,OAAO,EACP,YAAY,EAIf;IAEG,qBACI,8OAAC,kKAAA,CAAA,UAAe;QACZ,6BACI,8OAAC,6HAAA,CAAA,UAAK;YACF,KAAK,QAAQ,KAAK;YAClB,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,SAAS;YACT,OAAO;gBAAE,WAAW;YAAQ;YAC5B,WAAU;YACV,QAAQ;;;;;;QAGhB,8BACI,8OAAC,iLAAA,CAAA,oBAAiB;YACd,aAAa;YACb,UAAU,CAAC,OAAS,aAAa;;;;;;;;;;;AAKrD","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/templates/detail-product/detail-product.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\n\nimport Skeleton from '@/app/molecules/skeleton/skeleton';\nimport { useProductsRepository } from '@/core/repositories/products/useProductsRepository';\nimport { Product, ProductState } from '@/shared/models/products/products';\n\nimport DetailProductCard from '../../organims/detail-product-card/detail-product-card';\nimport UpdateProduct from '../../organims/update-product/update-product';\n\nexport default function Detail() {\n    const [product, setProduct] = useState<ProductState>({} as ProductState);\n    const [update, setUpdate] = useState<boolean>(false);\n\n    const useUpdateProduct = useProductsRepository();\n\n    useEffect(() => {\n        const subscriptionProduct = useProductsRepository()\n            .getProductsObservable()\n            .subscribe((value) => {\n                setProduct(value);\n            });\n\n        return () => subscriptionProduct.unsubscribe();\n    }, []);\n\n    const onHandleUpdate = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        setUpdate(true);\n    };\n\n    const onUpdate = (updatedProduct: Product) => {\n        useUpdateProduct.update(updatedProduct.id, updatedProduct);\n        setUpdate(false);\n    };\n\n    const renderContent = () => {\n        if (product.load) return <Skeleton />;\n        if (product.error) return <div className=\"text-red-500\">Error: {product.error}</div>;\n\n        if (update) {\n            return (\n                <UpdateProduct\n                    handleSubmit={onUpdate}\n                    product={product.productById}\n                />\n            );\n        }\n\n        return product.productById ? (\n            <DetailProductCard\n                onClickUpdate={onHandleUpdate}\n                product={product.productById}\n            />\n        ) : (\n            <Skeleton />\n        );\n    };\n\n    return <section>{renderContent()}</section>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AAGA;AACA;AATA;;;;;;;AAWe,SAAS;IACpB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,CAAC;IACtD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAE9C,MAAM,mBAAmB,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,sBAAsB,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD,IAC3C,qBAAqB,GACrB,SAAS,CAAC,CAAC;YACR,WAAW;QACf;QAEJ,OAAO,IAAM,oBAAoB,WAAW;IAChD,GAAG,EAAE;IAEL,MAAM,iBAAiB,CAAC;QACpB,EAAE,cAAc;QAChB,UAAU;IACd;IAEA,MAAM,WAAW,CAAC;QACd,iBAAiB,MAAM,CAAC,eAAe,EAAE,EAAE;QAC3C,UAAU;IACd;IAEA,MAAM,gBAAgB;QAClB,IAAI,QAAQ,IAAI,EAAE,qBAAO,8OAAC,gJAAA,CAAA,UAAQ;;;;;QAClC,IAAI,QAAQ,KAAK,EAAE,qBAAO,8OAAC;YAAI,WAAU;;gBAAe;gBAAQ,QAAQ,KAAK;;;;;;;QAE7E,IAAI,QAAQ;YACR,qBACI,8OAAC,iKAAA,CAAA,UAAa;gBACV,cAAc;gBACd,SAAS,QAAQ,WAAW;;;;;;QAGxC;QAEA,OAAO,QAAQ,WAAW,iBACtB,8OAAC,iLAAA,CAAA,UAAiB;YACd,eAAe;YACf,SAAS,QAAQ,WAAW;;;;;iCAGhC,8OAAC,gJAAA,CAAA,UAAQ;;;;;IAEjB;IAEA,qBAAO,8OAAC;kBAAS;;;;;;AACrB","debugId":null}},
    {"offset": {"line": 1322, "column": 0}, "map": {"version":3,"sources":["file:///Users/alonsodaniel/Desktop/Frontend-next%20/MercadoPrueba/PorductStore/src/app/dasboard/detail-product/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { use, useEffect } from \"react\";\n\nimport Detail from \"@/app/templates/detail-product/detail-product\";\nimport { useProductsRepository } from \"@/core/repositories/products/useProductsRepository\";\n\n/**\n * DetailProduct component renders the detail view of a product based on its ID.\n *\n * @param {Object} props.params - The route parameters.\n * @param {string} props.params.id - The ID of the product to display details for.\n *\n * @returns {JSX.Element} A React component that displays the product details.\n *\n * @remarks\n * - This component uses the `useProductsRepository` hook to fetch product details.\n * - The `useEffect` hook is used to fetch the product data when the component mounts or when the `params.id` changes.\n * - The `Detail` component is used to display the product details inside a styled container.\n *\n */\nexport default function DetailProduct({\n    params,\n}: {\n    params: Promise<{ id: string }>;\n}) {\n    const { id } = use(params);\n    const initDetailProduct = useProductsRepository();\n\n    useEffect(() => {\n        initDetailProduct.getProductById(Number(id));\n    }, []);\n\n    return (\n        <section className=\"flex flex-col justify-center items-center w-full h-screen bg-gray-100\">\n            <div className=\"bg-white shadow-lg rounded-lg p-8\">\n                <Detail />\n            </div>\n        </section>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AALA;;;;;AAqBe,SAAS,cAAc,EAClC,MAAM,EAGT;IACG,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,MAAG,AAAD,EAAE;IACnB,MAAM,oBAAoB,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD;IAE9C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,kBAAkB,cAAc,CAAC,OAAO;IAC5C,GAAG,EAAE;IAEL,qBACI,8OAAC;QAAQ,WAAU;kBACf,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC,kKAAA,CAAA,UAAM;;;;;;;;;;;;;;;AAIvB","debugId":null}}]
}